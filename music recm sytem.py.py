# -*- coding: utf-8 -*-
"""Copy of Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HPrLr-hf5omNIIUvnV0r7_GxansUNsfK

# **LETS GROW MORE INTERNSHIP - JUNE 2023**

**TASK 3 - MUSIC RECOMMENDATION SYSTEM MACHINE LEARNING MODEL**





 BY AKSHITA SHRIVASTAVA

**IMPORTING THE LIBRARIES**
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
from sklearn import svm, datasets
from types import UnionType
# %matplotlib inline

from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import StandardScaler
from sklearn.pipeline import Pipeline
from sklearn.metrics import accuracy_score
from sklearn.metrics import confusion_matrix

"""Load Datasets in tabular Form::"""

df = pd.read_csv('music recommendaion.csv')
df.head()

"""Displaying all columns::"""

df.columns

"""Displaying all columns in histogram ::

"""

df.hist(figsize = (18, 20))
plt.show()

"""Deleting the columns::"""

df = df.drop(columns = ['liveness', 'loudness', 'mode'])
df.head()

"""Reading a new Dataset::"""

dp = pd.read_csv('music 2.csv')
dp.head()

"""Displaying the columns of second dataset::"""

df.columns

"""Displaying the dataset in histogram::"""

df.hist(figsize = (18, 20))
plt.show()

"""ANALYSING SECOND DATASET ::"""

df.drop(columns = ['liveness', 'loudness', 'mode'])
df.head()

dp.describe()

dp.describe()

dp.hist()

"""INSERTING A NEW DATASET INTO THE ML MODEL

"""

dt = pd.read_csv('music 3.csv.csv')
dt.head()

"""ANALYSING THE DATASET ::"""

dt.columns

dt.Popularity

dt.info

dt.Instrumentalness

dt.plot.area(figsize = (5,5), stacked = False)

"""CORRELAION OF THE DATASETS ::"""

print(f"The music recomendation has {df.shape[0]} rows and {df.shape[1]} columns.")
print(f"The music 2 has {dp.shape[0]} rows and {dp.shape[1]} columns.")
print(f"The music 3 has {dt.shape[0]} rows and {dt.shape[1]} columns.")

print("The columns in music recommendation are:")
for columns in df:
  print(columns)

print("The columns in music 2 are:")
for columns in dp:
  print(columns)

print("The columns in music 3 are:")
for columns in dt:
  print(columns)

df.isnull().sum()

for i in dt.columns:
  plt.scatter(dt[str(i)], dt['Energy'])
  plt.xlabel(i)
  plt.ylabel('Loudness')
  plt.show()

dp.nunique()

plt.figure(figsize = (12,14))
sns.heatmap(df.corr(), cmap = 'Blues',annot = True)

plt.figure(figsize = (12, 15))
sns.heatmap(dp.corr(), cmap = 'Reds', annot = True)

plt.figure(figsize = (10,14))
sns.heatmap(dt.corr(), cmap = 'Greens', annot = True)

df['loudness'].value_counts()

dt.fillna('energy', inplace = True)

"""# THE END"""